--THIS SCRIPT SHOULD BE INSERTED INTO A NEW MODULED CALLED Loot UNDER ServerScriptService/ServerHandler


-- Get references to services and folders
local replicatedStorage = game:GetService("ReplicatedStorage")
local lootSpawns = workspace:WaitForChild("LootSpawns") -- Folder containing spawn points
local weaponFolder = replicatedStorage:WaitForChild("Weapons") -- Folder of weapon templates
local random = Random.new() -- Random generator for weapon selection
local weapons = require(script.Parent.Weapons) -- Module with utility functions
local loot = {} -- Table to hold loot-related functions

-- Converts a weapon Tool into a static Model for visual display
local function makeWeaponModel(weapon)
	local weaponModel = Instance.new("Model")

	for _, child in pairs(weapon:GetDescendants()) do
		if child:IsA("BasePart") then
			child.Parent = weaponModel
			child.Anchored = true -- Prevent physics movement
			child:ClearAllChildren() -- Remove scripts, welds, etc.
		end
	end

	weapon:Destroy() -- Clean up the original Tool

	return weaponModel
end

-- Main function to spawn weapons at each loot point
loot.spawnWeapons = function()
	for _, spawnPoint in pairs(lootSpawns:GetChildren()) do
		-- Remove any existing weapon model at the spawn point
		local oldModel = spawnPoint:FindFirstChildOfClass("Model")
		if oldModel then
			oldModel:Destroy()
		end

		-- Select a random weapon from the pool
		local weaponPool = weaponFolder:GetChildren()
		local randomIndex = random:NextInteger(1, #weaponPool)
		local weapon = weaponPool[randomIndex]:Clone()
		local weaponName = weapon.Name

		-- Convert the weapon Tool into a static visual model
		local weaponModel = makeWeaponModel(weapon)
		weaponModel.Parent = spawnPoint

		-- Create an invisible hitbox to detect player pickup
		local primaryPart = Instance.new("Part")
		primaryPart.Anchored = true
		primaryPart.CanCollide = false
		primaryPart.Transparency = 1
		primaryPart.CFrame, primaryPart.Size = weaponModel:GetBoundingBox()
		primaryPart.Parent = weaponModel

		-- Set the model's primary part for positioning
		weaponModel.PrimaryPart = primaryPart
		local newCFrame = CFrame.new(spawnPoint.CFrame.Position) * CFrame.new(0, 2, 0)
		weaponModel:SetPrimaryPartCFrame(newCFrame)

		-- Handle pickup when a player touches the hitbox
		primaryPart.Touched:Connect(function(hit)
			local player, char = weapons.playerFromHit(hit)
			if player and char then
				local tool = weaponFolder:FindFirstChild(weaponName):Clone()
				tool.Parent = player:WaitForChild("Backpack")
				char:WaitForChild("Humanoid"):EquipTool(tool)
				weaponModel:Destroy() -- Remove the visual model after pickup
			end
		end)
	end
end

-- Initialize spawn points to be invisible and non-collidable
for _, spawnPoint in pairs(lootSpawns:GetChildren()) do
	spawnPoint.Anchored = true
	spawnPoint.CanCollide = false
	spawnPoint.Transparency = 1
end

return loot
