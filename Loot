--THIS SCRIPT SHOULD BE INSERTED INTO A NEW MODULED CALLED Loot UNDER ServerScriptService/ServerHandler


-- Services and dependencies
local replicatedStorage = game:GetService("ReplicatedStorage") -- Shared storage between server and clients
local lootSpawns = workspace.LootSpawns -- Folder containing weapon spawn points
local weaponFolder = replicatedStorage.Weapons -- Folder containing weapon Tool objects
local random = Random.new() -- Random number generator
local weapons = require(script.Parent.Weapons) -- Module for weapon-related utilities
local loot = {} -- Module table to hold functions

-- Converts a Tool into a static Model for display at spawn points
local function makeWeaponModel(weapon)
    local weaponModel = Instance.new("Model")

    for _, child in pairs(weapon:GetDescendants()) do
        if child:IsA("BasePart") then
            child.Parent = weaponModel -- Add part to model
            child.Anchored = true -- Prevent physics movement
            child:ClearAllChildren() -- Remove any attached scripts or objects
        end
    end
    
    weapon:Destroy() -- Remove original Tool

    return weaponModel
end

-- Spawns weapons at each loot spawn point
loot.spawnWeapons = function()
    for _, spawnPoint in pairs(lootSpawns:GetChildren()) do
        -- Remove any existing weapon model
        local oldModel = spawnPoint:FindFirstChildOfClass("Model")
        if oldModel then
            oldModel:Destroy()
        end
        
        -- Select a random weapon from the pool
        local weaponPool = weaponFolder:GetChildren()
        local randomIndex = random:NextInteger(1, #weaponPool)
        local weapon = weaponPool[randomIndex]:Clone()
        local weaponName = weapon.Name

        -- Create a static model for display
        local weaponModel = makeWeaponModel(weapon)
        weaponModel.Parent = spawnPoint

        -- Create invisible hitbox for pickup detection
        local primaryPart = Instance.new("Part")
        primaryPart.Anchored = true
        primaryPart.CanCollide = false
        primaryPart.Transparency = 1
        primaryPart.CFrame, primaryPart.Size = weaponModel:GetBoundingBox()
        primaryPart.Parent = weaponModel

        weaponModel.PrimaryPart = primaryPart
        local newCFrame = CFrame.new(spawnPoint.CFrame.Position) * CFrame.new(0, 2, 0)
        weaponModel:SetPrimaryPartCFrame(newCFrame)

        -- Handle pickup when player touches the weapon
        primaryPart.Touched:Connect(function(hit)
            local player, char = weapons.playerFromHit(hit)
            if player and char then
                local tool = weaponFolder:FindFirstChild(weaponName):Clone()
                tool.Parent = player.Backpack
                char.Humanoid:EquipTool(tool)
                weaponModel:Destroy()
            end
        end)
    end
end

-- Prepare spawn points to be invisible and non-collidable
for _, spawnPoint in pairs(lootSpawns:GetChildren()) do
    spawnPoint.Anchored = true
    spawnPoint.CanCollide = false
    spawnPoint.Transparency = 1
end

return loot -- Return module for use in other scripts
