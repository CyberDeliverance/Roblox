-- Services
local playerService = game:GetService("Players")
local replicatedStorage = game:GetService("ReplicatedStorage")
local replicateRemote = replicatedStorage.Replicate -- RemoteEvent for visual effects
local hitRemote = replicatedStorage.Hit -- RemoteEvent for hit detection

-- Local player setup
local player = playerService.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local mouse = player:GetMouse()

-- Tool and weapon configuration
local tool = script.Parent
local firePoint = tool:WaitForChild("Handle") -- Part where bullets originate
local gunSettings = require(tool:WaitForChild("Settings")) -- Weapon stats
local equipped = false -- Tracks whether the weapon is equipped

-- Equip/Unequip state tracking
tool.Equipped:Connect(function()
    equipped = true
end)

tool.Unequipped:Connect(function()
    equipped = false
end)

-- Raycasting setup
local ignoreList = {char, workspace.Effects} -- Parts to ignore during raycast
local debris = game:GetService("Debris") -- Used to clean up visual effects

-- Casts a ray and creates a visual bullet trail
local function castRay()
    local origin = firePoint.Position
    local direction = (mouse.Hit.p - firePoint.Position).Unit * gunSettings.range

    local ray = Ray.new(origin, direction)
    local hit, pos = workspace:FindPartOnRayWithIgnoreList(ray, ignoreList)

    -- Send visual effect data to server
    replicatedStorage.Replicate:FireServer(tool, origin, pos)

    -- Create visual bullet trail
    local visual = Instance.new("Part")
    local length = (pos - origin).Magnitude
    visual.Anchored = true
    visual.CanCollide = false
    visual.Material = Enum.Material.Neon
    visual.Color = gunSettings.rayColor
    visual.Size = Vector3.new(gunSettings.raySize.X, gunSettings.raySize.Y, length)
    visual.CFrame = CFrame.new(origin, pos) * CFrame.new(0, 0, -length / 2)
    visual.Parent = workspace.Effects
    debris:AddItem(visual, gunSettings.debrisTime)

    return hit, pos, direction, origin
end

-- Triggers particle and sound effects on firePoint
local function gunEffects()
    for _, effect in pairs(firePoint:GetChildren()) do
        if effect:IsA("ParticleEmitter") then
            effect:Emit(50)
        end
        if effect:IsA("Sound") then
            effect:Play()
        end
    end
end

-- Controls firing logic
local doFire = false

local function fire()
    local waitTime = 60 / gunSettings.rateOfFire -- Convert RPM to delay

    repeat
        if equipped and not tool.Debounce.Value then
            tool.Debounce.Value = true

            -- Reset debounce after delay
            delay(waitTime, function()
                tool.Debounce.Value = false
            end)

            gunEffects()
            local hit, pos, direction, origin = castRay()

            -- Send hit data to server for damage processing
            if hit then
                local relCFrame = hit.CFrame:Inverse() * CFrame.new(pos)
                hitRemote:FireServer(tool, hit, direction, origin, relCFrame)
            end
        end
        wait(waitTime)
    until not equipped or not doFire or gunSettings.fireMode ~= "AUTO"
end

-- Mouse input handling
mouse.Button1Down:Connect(function()
    doFire = true
    if char.Humanoid.Health > 0 then
        fire()
    end
end)

mouse.Button1Up:Connect(function()
    doFire = false
end)
